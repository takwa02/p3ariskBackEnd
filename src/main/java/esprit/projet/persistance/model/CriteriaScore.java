package esprit.projet.persistance.model;
// Generated 30 aoï¿½t 2020 13:08:24 by Hibernate Tools 4.3.5.Final

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * CriteriaScore generated by hbm2java
 */
@Entity
@Table(name = "CRITERIA_SCORE")
public class CriteriaScore implements java.io.Serializable {
	

	@Override
	public String toString() {
		return "CriteriaScore [criteriaScoreId=" + criteriaScoreId + ", criteriaYear=" + criteriaYear + ", rangeId="
				+ rangeId + ", lowerLimit=" + lowerLimit + ", upperLimit=" + upperLimit + ", score=" + score
				+ ", scoreResult=" + scoreResult + "]";
	}

	private BigDecimal criteriaScoreId;
	private CriteriaDef criteriaDef;
	private BigDecimal criteriaYear;
	private BigDecimal rangeId;
	private BigDecimal lowerLimit;
	private BigDecimal upperLimit;
	private BigDecimal score;
	@Transient
	private boolean scoreResult;
	
	@Transient
	public boolean isScoreResult() {
		this.scoreResult=lowerLimit.equals(new BigDecimal(1)) && upperLimit.equals(new BigDecimal(1));
		System.out.println(scoreResult);
				
		return scoreResult;
	}

	public CriteriaScore() {
	}

	public CriteriaScore(BigDecimal criteriaScoreId) {
		this.criteriaScoreId = criteriaScoreId;
	}

	public CriteriaScore(BigDecimal criteriaScoreId, CriteriaDef criteriaDef, BigDecimal criteriaYear,
			BigDecimal rangeId, BigDecimal lowerLimit, BigDecimal upperLimit, BigDecimal score) {
		this.criteriaScoreId = criteriaScoreId;
		this.criteriaDef = criteriaDef;
		this.criteriaYear = criteriaYear;
		this.rangeId = rangeId;
		this.lowerLimit = lowerLimit;
		this.upperLimit = upperLimit;
		this.score = score;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE,generator ="CRITERIA_SCORE_SEQ" )
	@SequenceGenerator(name="CRITERIA_SCORE_SEQ", sequenceName="CRITERIA_SCORE_SEQ", allocationSize=1)
	@Column(name = "CRITERIA_SCORE_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getCriteriaScoreId() {
		return this.criteriaScoreId;
	}

	public void setCriteriaScoreId(BigDecimal criteriaScoreId) {
		this.criteriaScoreId = criteriaScoreId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CRITERIA_ID")
	public CriteriaDef getCriteriaDef() {
		return this.criteriaDef;
	}

	public void setCriteriaDef(CriteriaDef criteriaDef) {
		this.criteriaDef = criteriaDef;
	}

	@Column(name = "CRITERIA_YEAR", precision = 22, scale = 0)
	public BigDecimal getCriteriaYear() {
		return this.criteriaYear;
	}

	public void setCriteriaYear(BigDecimal criteriaYear) {
		this.criteriaYear = criteriaYear;
	}

	@Column(name = "RANGE_ID", precision = 22, scale = 0)
	public BigDecimal getRangeId() {
		return this.rangeId;
	}

	public void setRangeId(BigDecimal rangeId) {
		this.rangeId = rangeId;
	}

	@Column(name = "LOWER_LIMIT", precision = 20, scale = 10)
	public BigDecimal getLowerLimit() {
		return this.lowerLimit;
	}

	public void setLowerLimit(BigDecimal lowerLimit) {
		this.lowerLimit = lowerLimit;
	}

	@Column(name = "UPPER_LIMIT", precision = 20, scale = 10)
	public BigDecimal getUpperLimit() {
		return this.upperLimit;
	}

	public void setUpperLimit(BigDecimal upperLimit) {
		this.upperLimit = upperLimit;
	}

	@Column(name = "SCORE", precision = 22, scale = 0)
	public BigDecimal getScore() {
		return this.score;
	}

	public void setScore(BigDecimal score) {
		this.score = score;
	}

}
